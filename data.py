# data.py

import pandas as pd
import os

# Минимальные рекомендуемые диаметры шкивов в мм
MIN_PULLEY_DIAMETERS = {"Z(0)": 50, "A": 71, "B": 112, "C": 180, "D": 280, "E": 450}

# Коэффициенты режима работы (Kp)
LOAD_COEFFICIENTS = {"спокойная": 1.0, "средняя": 1.1, "тяжелая": 1.2, "ударная": 1.3}

# Стандартные длины клиновых ремней
STANDARD_BELT_LENGTHS = {
    "Z(0)": [360, 381, 395, 410, 420, 425, 435, 450, 457, 470, 480, 500, 530, 560, 600, 630, 670, 710, 750, 800, 850,
             900, 950, 1000, 1060, 1120, 1180, 1250, 1320, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2120, 2240, 2500,
             2800],
    "A": [420, 435, 450, 457, 470, 480, 500, 530, 600, 630, 670, 690, 710, 730, 750, 775, 800, 830, 850, 875, 880, 930,
          940, 950, 965, 970, 1000, 1020, 1030, 1040, 1045, 1060, 1090, 1100, 1120, 1150, 1160, 1180, 1200, 1213, 1220,
          1225, 1240, 1250, 1300, 1320, 1350, 1400, 1430, 1450, 1550, 1600, 1650, 1700, 1750, 1800, 1850, 1900, 2000,
          2120, 2240, 2360, 2500, 2650, 2800, 3000, 3150, 3350, 3750, 4000, 4500, 5300],
    "B": [530, 630, 670, 710, 750, 800, 840, 887, 900, 930, 937, 950, 987, 1000, 1020, 1040, 1045, 1050, 1060, 1080,
          1100, 1120, 1130, 1150, 1160, 1180, 1200, 1225, 1230, 1250, 1280, 1290, 1320, 1350, 1400, 1420, 1450, 2720,
          2800, 3000, 3070, 3100, 3150, 3350, 3500, 3550, 3750, 3900, 4000, 4250, 4500, 4750, 5000, 5300, 5600, 6000,
          6300, 6500, 6700, 7100, 7250, 7620, 8500, 9000],
    "C": [1180, 1250, 1400, 1450, 1500, 1600, 1650, 1700, 1800, 1900, 2000, 2120, 2240, 2500, 2650, 2700, 2800, 3000,
          3150, 3350, 3550, 3585, 3750, 4000, 4250, 4350, 4500, 4750, 5000, 5300, 5600, 6000, 6300, 6700, 7100, 7500,
          8000, 9000, 9500],
    "D": [1900, 2000, 2120, 2240, 2360, 2500, 2650, 2800, 3000, 3150, 3350, 3475, 3550, 3750, 4000, 4250, 4500, 4750,
          5000, 5300, 5600, 6000, 6300, 6700, 7100, 7500, 8000, 8500, 9000, 9500, 10000, 11200, 11750, 12500],
    "E": [3350, 3750, 4000, 4500, 4750, 5000, 5600, 6000, 6300, 7100, 7500, 8000, 10000, 10600, 11200]
}

# Стандартные диаметры шкивов
STANDARD_PULLEY_DIAMETERS_COMMON = [50, 53, 56, 60, 63, 67, 71, 75, 80, 85, 90, 95, 100, 106, 112, 118, 125, 132, 140,
                                    150, 160, 170, 180, 190, 200, 212, 224, 236, 250, 265, 280, 300, 315, 335, 355, 375,
                                    400, 425, 450, 475, 500, 530, 560, 600, 620, 630, 670, 710, 750, 800, 850, 900, 950,
                                    1000, 1060, 1120, 1180, 1250, 1320, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2120,
                                    2240, 2360, 2500, 2650, 2800, 3000, 3150, 3550, 3750, 4000]
STANDARD_PULLEY_DIAMETERS = {"Z(0)": STANDARD_PULLEY_DIAMETERS_COMMON, "A": STANDARD_PULLEY_DIAMETERS_COMMON,
                             "B": STANDARD_PULLEY_DIAMETERS_COMMON, "C": STANDARD_PULLEY_DIAMETERS_COMMON,
                             "D": STANDARD_PULLEY_DIAMETERS_COMMON, "E": STANDARD_PULLEY_DIAMETERS_COMMON}

# Номинальная мощность P0 (обобщенные данные)
P0_DATA_BY_V_RANGES = {
    "Z(0)": [(0, 5), (5, 10), (10, 15), (15, 20), (20, 25), (25, float('inf'))],
    "A": [(0, 5), (5, 10), (10, 15), (15, 20), (20, 25), (25, float('inf'))],
    "B": [(0, 5), (5, 10), (10, 15), (15, 20), (20, 25), (25, float('inf'))],
    "C": [(0, 5), (5, 10), (10, 15), (15, 20), (20, 25), (25, float('inf'))],
    "D": [(0, 5), (5, 10), (10, 15), (15, 20), (20, 25), (25, float('inf'))],
    "E": [(0, 5), (5, 10), (10, 15), (15, 20), (20, 25), (25, float('inf'))],
}
P0_VALUES = {
    "Z(0)": [0.20, 0.50, 0.90, 1.30, 1.60, 2.00], "A": [0.50, 0.95, 1.60, 2.15, 2.60, 3.00],
    "B": [0.85, 1.40, 2.30, 3.10, 3.80, 4.50], "C": [1.20, 2.00, 3.00, 4.00, 4.80, 5.50],
    "D": [2.00, 3.50, 5.20, 6.50, 7.40, 8.50], "E": [3.00, 5.00, 7.00, 8.80, 10.0, 11.5],
}

# Коэффициенты
CL_DATA = {"Z(0)": {424: 0.87, 449: 0.88, 474: 0.89, 494: 0.90, 524: 0.91, 554: 0.93, 584: 0.94, 624: 0.95, 654: 0.96,
                    704: 0.97, 734: 0.99, 824: 1.00, 924: 1.03, 1024: 1.06, 1144: 1.08, 1274: 1.11, 1424: 1.14,
                    1624: 1.17},
           "A": {662: 0.81, 742: 0.82, 832: 0.85, 932: 0.87, 1032: 0.89, 1152: 0.91, 1282: 0.93, 1432: 0.96, 1632: 0.99,
                 1732: 1.00, 1832: 1.01, 2032: 1.03, 2272: 1.06, 2532: 1.09, 2832: 1.11, 3182: 1.13},
           "B": {942: 0.81, 1042: 0.84, 1142: 0.86, 1292: 0.88, 1442: 0.90, 1642: 0.93, 1842: 0.95, 2042: 0.98,
                 2282: 1.00, 2592: 1.03, 2842: 1.05, 3192: 1.07, 3592: 1.10, 4042: 1.13, 4542: 1.15, 5042: 1.18,
                 5642: 1.20, 6342: 1.23}, "C": {}, "D": {}, "E": {}}
CALPHA_DATA = {(0, 120): 0.90, (120, 150): 0.95, (150, 170): 0.98, (170, 181): 1.00}
CZ_DATA = {1: 1.00, 2: 1.15, 3: 1.25, 4: 1.30, 5: 1.35}
MATERIAL_P0_CORRECTION_FACTORS = {"Стандартный (CR/Полиэстер)": 1.0, "Высокоэффективный (EPDM/Полиэстер)": 1.1,
                                  "Высокопрочный (CR/Арамид)": 1.2, "Премиум (TPU/Арамид или Сталь)": 1.35}


# --- ФУНКЦИЯ ЗАГРУЗКИ ДАННЫХ ИЗ CSV ---
def load_power_data(profile, data_dir="parsed_data"):
    """
    Загружает данные о мощности из CSV-файла для указанного профиля.
    """
    filename = f"power_data_{profile}_Pb.csv"
    filepath = os.path.join(data_dir, filename)

    if not os.path.exists(filepath):
        return None

    try:
        df = pd.read_csv(filepath)
        print(f"Успешно загружены данные для профиля {profile} из файла {filepath}")
        return df
    except Exception as e:
        print(f"Ошибка при чтении файла {filepath}: {e}")
        return None